#ifndef HELPER_CLASS_H_

#include <iostream>

/**
 * Rule of 5
 * If a class requires one of the following functions to be defined, then it should define all of them:
 *
 * 1. Destructor
 * 2. Copy constructor
 * 3. Copy assignment operator
 * 4. Move constructor
 * 5. Move assignment operator
 *
 * The reason for this is that if any of these functions are defined, then the default implementation of the others
 * will not be generated by the compiler. This can lead to unexpected behavior and bugs if the class is not designed
 * to handle these situations properly.
 *
 */

struct MyClass {
  // constructor
  MyClass() {
    std::cout << "Constructor\n";
  }
  ~MyClass() {
    std::cout << "Destructor\n";
  }
  // Note: don't make this explicit, it won't be called e.g. in MyClass c = b;
  MyClass(const MyClass& other) {
    std::cout << "Copy constructor\n";
  }
  MyClass& operator=(const MyClass& other) {
    std::cout << "Copy assignment\n";
    return *this;
  }
  // C.66: Make move operations noexcept. (matter of performance)
  MyClass(MyClass&& other) noexcept {
    std::cout << "Move constructor\n";
  }
  MyClass& operator=(MyClass&& other) noexcept {
    std::cout << "Move assignment\n";
    return other;
  }
  void UseObject() {
    std::cout << "UseObject\n";
  }
};

#endif  // HELPER_CLASS_H_